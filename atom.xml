<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦觉知晓的博客</title>
  <subtitle>这是一个不能停留太久的世界</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cs-tao.github.io/"/>
  <updated>2017-08-20T09:08:45.248Z</updated>
  <id>https://cs-tao.github.io/</id>
  
  <author>
    <name>梦觉知晓</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何利用hexo发表文章</title>
    <link href="https://cs-tao.github.io/2017/08/19/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8hexo%E5%8F%91%E8%A1%A8%E6%96%87%E7%AB%A0/"/>
    <id>https://cs-tao.github.io/2017/08/19/如何利用hexo发表文章/</id>
    <published>2017-08-19T08:57:45.373Z</published>
    <updated>2017-08-20T09:08:45.248Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 如何利用hexo发表文章 </strong> <excerpt in="" index="" |="" 首页摘要=""><br>    本文修改自<a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>自动创建的Hello-World.md，Hexo代码开源。详见<a href="https://github.com/hexojs/hexo/" target="_blank" rel="external">GitHub</a><br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<p>本文修改自<a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>自动创建的Hello-World.md，Hexo代码开源。详见<a href="https://github.com/hexojs/hexo/" target="_blank" rel="external">GitHub</a>。</p>
<h2 id="新建文章并发表"><a href="#新建文章并发表" class="headerlink" title="新建文章并发表"></a>新建文章并发表</h2><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"新文章"</span></div></pre></td></tr></table></figure>
<h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p>详见：Hexo<a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">官方文档</a></p>
<h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>详见：Hexo<a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">官方文档</a></p>
<h2 id="启动hexo服务"><a href="#启动hexo服务" class="headerlink" title="启动hexo服务"></a>启动hexo服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>详见：Hexo<a href="https://hexo.io/docs/server.html" target="_blank" rel="external">官方文档</a></p>
<h2 id="部署到远程"><a href="#部署到远程" class="headerlink" title="部署到远程"></a>部署到远程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>Hexo<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">官方文档</a></p>
</the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 如何利用hexo发表文章 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;    本文修改自&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;自动创建的Hello-World.md，Hexo代码开源。详见&lt;a href=&quot;https://github.com/hexojs/hexo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web" scheme="https://cs-tao.github.io/categories/web/"/>
    
    
      <category term="Hexo" scheme="https://cs-tao.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>GMap.net for WPF 使用心得</title>
    <link href="https://cs-tao.github.io/2017/08/19/GMap.net-for-WPF-%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>https://cs-tao.github.io/2017/08/19/GMap.net-for-WPF-使用心得/</id>
    <published>2017-08-19T08:42:23.000Z</published>
    <updated>2017-08-20T18:51:00.230Z</updated>
    
    <content type="html"><![CDATA[<p><strong> GMap.net for WPF </strong> <excerpt in="" index="" |="" 首页摘要=""><br>    利用GMap.net for WPF绘制点线面的方式以及未指定长宽的要素与其他要素间相对定位的方式<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<h2 id="GMap-net概述"><a href="#GMap-net概述" class="headerlink" title="GMap.net概述"></a>GMap.net概述</h2><p><a href="https://greatmaps.codeplex.com/" title="进入GMap.NET的项目地址" target="_blank" rel="external">GMap.net</a>是一个强大、免费、跨平台、开源的.NET控件，它在WinForm和WPF环境中能够通过Google, Yahoo!, Bing, OpenStreetMap, ArcGIS, Pergo, SigPac等实现寻找路径、地理编码以及地图展示功能，并支持缓存和运行在Mobile环境中。<br>GMap.NET是一个开源的GEO地图定位和跟踪程序。就像谷歌地图、雅虎地图一样，可以自动计算两地的距离，定位经纬度，与Google地图不同的是，该项目是建立在WinForm框架或WPF框架基础上的。可以对地图放大缩小，进行城市标记等。<br>  <br></p>
<h2 id="GMap-net-for-WPF-绘制要素"><a href="#GMap-net-for-WPF-绘制要素" class="headerlink" title="GMap.net for WPF 绘制要素"></a>GMap.net for WPF 绘制要素</h2><p>因为现在正在利用GMap.net for WPF写一个项目，所以我对WPF版本更加熟悉，如有错误或不当之处，还望指出，共同进步！</p>
<ul>
<li><p>不同于Winform版本，WPF版本没有图层的概念，但用于显示要素的对象GMapMarker提供了Zindex属性，该属性值大的会遮盖属性值小的。所以大家可以利用Zindex对地理要素建立逻辑上的图层关联。</p>
</li>
<li><p>WinForm版本绘图可以直接在显示对象上设置图形的属性，如：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">GMapPolygon polygon = new GMapPolygon(pointList, &quot;Polygon&quot;);</div><div class="line">&#123;</div><div class="line">    polygon.IsHitTestVisible = true;</div><div class="line">    polygon.Fill = new SolidBrush(Color.FromArgb(50, Color.Red));</div><div class="line">    polygon.Stroke = new Pen(Color.Blue, 2);</div><div class="line">&#125;</div><div class="line">overlay.Polygons.Add(polygon);</div></pre></td></tr></table></figure>
<p>  对于wpf版本的点对象，可以直接指定显示用户控件，如：<br></p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">GMapMarker marker = new GMapMarker(pointLatLng);</div><div class="line">&#123;</div><div class="line">    MyUserControl myUserControl = new MyUserControl()</div><div class="line">    marker.Shape = myUserControl;</div><div class="line">    marker.ZIndex = (int)LayerIndex.Point;</div><div class="line">    marker.Offset = new Point(-myUserControl.ActualWidth / 2, -myUserControl.ActualHeight / 2);</div><div class="line">&#125;</div><div class="line">mapControl.Markers.Add(marker);</div></pre></td></tr></table></figure>
<p>  其中MyUserControl可以重载自UserControl，并自定义显示内容。LayerIndex为自定义的枚举类型。mapControl重载自GMapControl。<br>  但是wpf版本的线的属性设置需要重载GMapControl的CreateRoutePath方法，面的属性设置需要重载CreatePolygonPath方法。为了不影响原函数的内容，我们可以参考GMapControl的源代码<a href="https://greatmaps.codeplex.com/SourceControl/latest#GMap.NET.WindowsPresentation/GMap.NET.WindowsPresentation/GMapControl.cs" title="查看源码文件" target="_blank" rel="external"><em>GMapControl.cs</em></a>文件。重载CreateRoutePath方法和CreatePolygonPath后的内容如下，只做了少量修改：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">/// &lt;summary&gt;</div><div class="line">/// creates path from list of points, for performance set addBlurEffect to false</div><div class="line">/// &lt;/summary&gt;</div><div class="line">/// &lt;param name=&quot;pl&quot;&gt;&lt;/param&gt;</div><div class="line">/// &lt;returns&gt;&lt;/returns&gt;</div><div class="line">public override Path CreateRoutePath(List&lt;Point&gt; localPath, bool addBlurEffect)</div><div class="line">&#123;</div><div class="line">    // Create a StreamGeometry to use to specify myPath.</div><div class="line">    StreamGeometry geometry = new StreamGeometry();</div><div class="line">    </div><div class="line">    using (StreamGeometryContext ctx = geometry.Open())</div><div class="line">    &#123;</div><div class="line">        ctx.BeginFigure(localPath[0], false, false);</div><div class="line">        </div><div class="line">        // Draw a line to the next specified point.</div><div class="line">        ctx.PolyLineTo(localPath, true, true);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    // Freeze the geometry (make it unmodifiable)</div><div class="line">    // for additional performance benefits.</div><div class="line">    geometry.Freeze();</div><div class="line">    </div><div class="line">    // Create a path to draw a geometry with.</div><div class="line">    Path myPath = new Path();</div><div class="line">    &#123;</div><div class="line">        // Specify the shape of the Path using the StreamGeometry.</div><div class="line">        myPath.Data = geometry;</div><div class="line">        </div><div class="line">        if (addBlurEffect)</div><div class="line">        &#123;</div><div class="line">            BlurEffect ef = new BlurEffect();</div><div class="line">            &#123;</div><div class="line">                ef.KernelType = KernelType.Gaussian;</div><div class="line">                ef.Radius = 0.0;</div><div class="line">                ef.RenderingBias = RenderingBias.Performance;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            myPath.Effect = ef;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        myPath.Stroke = lineBrush;</div><div class="line">        myPath.StrokeThickness = lineWidth;</div><div class="line">        myPath.StrokeLineJoin = PenLineJoin.Round;</div><div class="line">        myPath.StrokeStartLineCap = PenLineCap.Triangle;</div><div class="line">        myPath.StrokeEndLineCap = PenLineCap.Round;</div><div class="line">        </div><div class="line">        myPath.Opacity = lineOpacity;</div><div class="line">        myPath.IsHitTestVisible = false;</div><div class="line">    &#125;</div><div class="line">    return myPath;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>  <code>注意:</code>代码中lineBrush、lineWidth、lineOpacity为重载GMapControl时新添的公共字段。</p>
   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">/// &lt;summary&gt;</div><div class="line">/// creates path from list of points, for performance set addBlurEffect to false</div><div class="line">/// &lt;/summary&gt;</div><div class="line">/// &lt;param name=&quot;pl&quot;&gt;&lt;/param&gt;</div><div class="line">/// &lt;returns&gt;&lt;/returns&gt;</div><div class="line">public override Path CreatePolygonPath(List&lt;Point&gt; localPath, bool addBlurEffect)</div><div class="line">&#123;</div><div class="line">    // Create a StreamGeometry to use to specify myPath.</div><div class="line">    StreamGeometry geometry = new StreamGeometry();</div><div class="line"></div><div class="line">    using (StreamGeometryContext ctx = geometry.Open())</div><div class="line">    &#123;</div><div class="line">        ctx.BeginFigure(localPath[0], true, true);</div><div class="line"></div><div class="line">        // Draw a line to the next specified point.</div><div class="line">        ctx.PolyLineTo(localPath, true, true);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // Freeze the geometry (make it unmodifiable)</div><div class="line">    // for additional performance benefits.</div><div class="line">    geometry.Freeze();</div><div class="line"></div><div class="line">    // Create a path to draw a geometry with.</div><div class="line">    Path myPath = new Path();</div><div class="line">    &#123;</div><div class="line">        // Specify the shape of the Path using the StreamGeometry.</div><div class="line">        myPath.Data = geometry;</div><div class="line"></div><div class="line">        if (addBlurEffect)</div><div class="line">        &#123;</div><div class="line">            BlurEffect ef = new BlurEffect();</div><div class="line">            &#123;</div><div class="line">                ef.KernelType = KernelType.Gaussian;</div><div class="line">                ef.Radius = 0.0;</div><div class="line">                ef.RenderingBias = RenderingBias.Performance;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            myPath.Effect = ef;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        myPath.Stroke = polygonStrokeBrush;</div><div class="line">        myPath.StrokeThickness = polygonThickness;</div><div class="line">        myPath.StrokeLineJoin = PenLineJoin.Miter;</div><div class="line">        myPath.StrokeStartLineCap = PenLineCap.Triangle;</div><div class="line">        myPath.StrokeEndLineCap = PenLineCap.Square;</div><div class="line"></div><div class="line">        myPath.Fill = polygonFillBush;</div><div class="line"></div><div class="line">        myPath.Opacity = polygonOpacity;</div><div class="line">        myPath.IsHitTestVisible = false;</div><div class="line">    &#125;</div><div class="line">    return myPath;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>  <code>注意:</code>代码中polygonStrokeBrush、polygonThickness、polygonFillBush、polygonOpacity为重载GMapControl时新添的公共字段。</p>
</li>
<li><p>wpf版本只能绘制Point、PolyLine、Polygon三种图形，绘制圆则需要借助多边形的绘制。示例如下：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public void DrawCircle(PointLatLng center, double R)</div><div class="line">&#123;</div><div class="line">    double cartesianCenterX = double.MaxValue;</div><div class="line">    double cartesianCenterY = double.MaxValue;</div><div class="line">    double cartesianCenterZ = double.MaxValue;</div><div class="line"></div><div class="line">    mapControl.MapProvider.Projection.FromGeodeticToCartesian(center.Lat, center.Lng, 0, out cartesianCenterX, out cartesianCenterY, out cartesianCenterZ);//将圆心投影到笛卡尔坐标系</div><div class="line"></div><div class="line">    int pointCount = 200;//用于拟合圆的多边形顶点个数</div><div class="line"></div><div class="line">    List&lt;PointLatLng&gt; polygonPointList = new List&lt;PointLatLng&gt;(pointCount);//用于存放多边形顶点</div><div class="line"></div><div class="line">    double interval = 2 * Math.PI / pointCount;</div><div class="line">    for (double degree = 0; degree &lt; 2 * Math.PI; degree += interval)</div><div class="line">    &#123;</div><div class="line">        double tempX = cartesianCenterX + R * Math.Cos(degree);</div><div class="line">        double tempY = cartesianCenterY + R * Math.Sin(degree);</div><div class="line">        double tempLng = double.MaxValue;</div><div class="line">        double tempLat = double.MaxValue;</div><div class="line">        mapControl.MapProvider.Projection.FromCartesianTGeodetic(tempX, tempY, cartesianCenterZ, out tempLat, out tempLng);//投影到WGS84坐标系</div><div class="line">        polygonPointList.Add(new PointLatLng(tempLat, tempLng));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    GMapPolygon circle = new GMapPolygon(polygonPointList);</div><div class="line">    &#123;</div><div class="line">        circle.ZIndex = (int)LayerIndex.Polygon;</div><div class="line">    &#125;</div><div class="line">    mapControl.Markers.Add(circle);//添加到地图</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>  效果如下：<br>  <img src="https://raw.githubusercontent.com/CS-Tao/github-content/master/contents/blog/image/GMap-Wpf-Draw-Circle.png" alt="查看图片"><br><br>  因为投影问题，说好的圆变为了椭圆，如果想生成正圆，可以在程序中使用一些WebAPI服务替换GMap的投影服务，我们项目使用的是搭建在自己服务器上的的GeoServer服务。效果如下：<br>  <img src="https://raw.githubusercontent.com/CS-Tao/github-content/master/contents/blog/image/FGIS-Damage-Circle.png" alt="查看图片"><br><br>  <code>备注：</code>两张图片截图自不同的程序。<br><br></p>
<h2 id="未指定长宽的要素与其他要素间相对定位的方式"><a href="#未指定长宽的要素与其他要素间相对定位的方式" class="headerlink" title="未指定长宽的要素与其他要素间相对定位的方式"></a>未指定长宽的要素与其他要素间相对定位的方式</h2><p>在使用GMap添加要素的时候，遇到需要对要素添加Tooltip，但不能指定Tooltip的长宽，且该要素与Tooltip需要水平中心对其，试过很多办法都不能成功，因为wpf控件的ActualWidth和ActualHeight属性必须加载过一次才能有正确的属性值，也就是说如果根据长宽计算GMapMarker的偏移量，Tolltip在第一次显示的时候无法正确定位，经过探索，最终利用wpf控件的SizeChanged响应函数实现了该效果，如果您有其他方法实现，希望能在评论中指出。效果如下：<br><br><img src="https://raw.githubusercontent.com/CS-Tao/github-content/master/contents/blog/image/GMap-Tooltip.png" alt="查看图片"><br></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">public void AddIconWithTooltip(PointLatLng pll, Uri iconUri, string tooltip)</div><div class="line">&#123;</div><div class="line">    Guid id = Guid.NewGuid();</div><div class="line">    </div><div class="line">    //添加tooltip显示窗口</div><div class="line">    GMapMarker tooltipViewer = new GMapMarker(pll);</div><div class="line">    &#123;</div><div class="line">        tooltipViewer.ZIndex = (int)LayerIndex.Point;</div><div class="line">        tooltipViewer.Tag = id;</div><div class="line">        TooltipForMap content = new TooltipForMap(tooltip, tooltipViewer);</div><div class="line">        tooltipViewer.Shape = content;</div><div class="line">        tooltipViewer.Shape.Visibility = Visibility.Hidden;</div><div class="line">    &#125;</div><div class="line">    mapControl.Markers.Add(tooltipViewer);</div><div class="line">    </div><div class="line">    UIElement shape = new MyIcon(new BitmapImage(iconUri), tooltipViewer);//构造函数：MyIcon(ImageSource image, GMapMarker iconTooltipViewer, double width = 22, double height = 22, bool showTipAlways = false)</div><div class="line">    </div><div class="line">    GMapMarker iconMarker = new GMapMarker(pll);</div><div class="line">    &#123;</div><div class="line">        iconMarker.ZIndex = (int)layerIndex;</div><div class="line">        iconMarker.Offset = new Point(-11, -11);</div><div class="line">        iconMarker.Tag = id;</div><div class="line">        iconMarker.Shape = shape;</div><div class="line">    &#125;</div><div class="line">    mapControl.Markers.Add(iconMarker);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>注意：</code>代码中id的作用是用于GMapMarker间的逻辑关联，方便同时从MapControl中移除。<br><br>关键代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TooltipForMap content = new TooltipForMap(tooltip, tooltipViewer);</div></pre></td></tr></table></figure></p>
<p>其中TooltipForMap类的SizeChanged函数如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">private void TooltipForMap_SizeChanged(object sender, SizeChangedEventArgs e)</div><div class="line">&#123;</div><div class="line">    _TooltipViewer.Offset = new Point(-ActualWidth / 2, -ActualHeight - 22);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>注意：</code>_TooltipViewer和传入构造函数的tooltipViewer为同一实例。<br><em>持续更新中…</em></p>
</the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; GMap.net for WPF &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;    利用GMap.net for WPF绘制点线面的方式以及未指定长宽的要素与其他要素间相对定位的方式&lt;br&gt;
    
    </summary>
    
      <category term="software" scheme="https://cs-tao.github.io/categories/software/"/>
    
    
      <category term="C#" scheme="https://cs-tao.github.io/tags/C/"/>
    
      <category term="Wpf" scheme="https://cs-tao.github.io/tags/Wpf/"/>
    
      <category term="Project" scheme="https://cs-tao.github.io/tags/Project/"/>
    
      <category term="GMap.net" scheme="https://cs-tao.github.io/tags/GMap-net/"/>
    
  </entry>
  
  <entry>
    <title>Android学习心得</title>
    <link href="https://cs-tao.github.io/2017/08/19/Android%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/"/>
    <id>https://cs-tao.github.io/2017/08/19/Android学习心得/</id>
    <published>2017-08-18T16:42:08.000Z</published>
    <updated>2017-08-19T08:57:45.358Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 参加四维图新地图制图大赛，写了个了Android App，现在把学到的知识记录一下 </strong> <excerpt in="" index="" |="" 首页摘要=""><br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">
</the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 参加四维图新地图制图大赛，写了个了Android App，现在把学到的知识记录一下 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="language" scheme="https://cs-tao.github.io/categories/language/"/>
    
    
      <category term="Android" scheme="https://cs-tao.github.io/tags/Android/"/>
    
      <category term="Java" scheme="https://cs-tao.github.io/tags/Java/"/>
    
      <category term="AndroidStudio" scheme="https://cs-tao.github.io/tags/AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>GIS-for-Web应用开发之道-学习心得</title>
    <link href="https://cs-tao.github.io/2017/08/19/GIS-for-Web%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E4%B9%8B%E9%81%93-%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/"/>
    <id>https://cs-tao.github.io/2017/08/19/GIS-for-Web应用开发之道-学习心得/</id>
    <published>2017-08-18T16:41:35.000Z</published>
    <updated>2017-08-21T19:27:57.338Z</updated>
    
    <content type="html"><![CDATA[<p><strong> GIS-for-Web应用开发之道 读书心得 </strong> <excerpt in="" index="" |="" 首页摘要=""><br>    在此感谢<a href="http://urbancolab.org/" title="Chaogui Kang" target="_blank" rel="external">康老师</a>的指导<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文=""></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; GIS-for-Web应用开发之道 读书心得 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;    在此感谢&lt;a href=&quot;http://urbancolab.org/&quot; title=&quot;Chaogui Kang&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;康老师&lt;/a&gt;的指导&lt;br&gt;
    
    </summary>
    
      <category term="web" scheme="https://cs-tao.github.io/categories/web/"/>
    
    
      <category term="GIS" scheme="https://cs-tao.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>git学习心得</title>
    <link href="https://cs-tao.github.io/2017/08/19/git%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/"/>
    <id>https://cs-tao.github.io/2017/08/19/git学习心得/</id>
    <published>2017-08-18T16:39:49.000Z</published>
    <updated>2017-08-20T02:42:49.720Z</updated>
    
    <content type="html"><![CDATA[<p><strong> git命令行学习小记 </strong> <excerpt in="" index="" |="" 首页摘要=""><br>    利用git命令行托管代码到github，搭建自己的git服务<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文=""></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; git命令行学习小记 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;    利用git命令行托管代码到github，搭建自己的git服务&lt;br&gt;
    
    </summary>
    
      <category term="software" scheme="https://cs-tao.github.io/categories/software/"/>
    
    
      <category term="Github" scheme="https://cs-tao.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://cs-tao.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>在VS中使用Github</title>
    <link href="https://cs-tao.github.io/2017/08/19/%E5%9C%A8VS%E4%B8%AD%E4%BD%BF%E7%94%A8Github/"/>
    <id>https://cs-tao.github.io/2017/08/19/在VS中使用Github/</id>
    <published>2017-08-18T16:39:34.000Z</published>
    <updated>2017-08-20T02:42:43.983Z</updated>
    
    <content type="html"><![CDATA[<p><strong> vs中使用GitHub的方法 </strong> <excerpt in="" index="" |="" 首页摘要=""><br>    将VS工程代码提交到github或自己的git服务<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文=""></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; vs中使用GitHub的方法 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;    将VS工程代码提交到github或自己的git服务&lt;br&gt;
    
    </summary>
    
      <category term="software" scheme="https://cs-tao.github.io/categories/software/"/>
    
    
      <category term="Github" scheme="https://cs-tao.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://cs-tao.github.io/tags/Git/"/>
    
      <category term="VS" scheme="https://cs-tao.github.io/tags/VS/"/>
    
  </entry>
  
  <entry>
    <title>Github使用指南</title>
    <link href="https://cs-tao.github.io/2017/08/19/Github%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>https://cs-tao.github.io/2017/08/19/Github使用指南/</id>
    <published>2017-08-18T16:39:07.000Z</published>
    <updated>2017-08-20T02:42:58.886Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 前几个月学习了Github的使用，希望我的经验能帮助到所有希望了解Github的人 </strong> <excerpt in="" index="" |="" 首页摘要=""><br>    感谢在我迷惑的时候有<a href="https://github.com/HPDell" title="HPDell" target="_blank" rel="external">师兄</a>的指点<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文=""></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 前几个月学习了Github的使用，希望我的经验能帮助到所有希望了解Github的人 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;    感谢在我迷惑的时候有&lt;a href=&quot;https://github.com/HPDell&quot; title=&quot;HPDell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;师兄&lt;/a&gt;的指点&lt;br&gt;
    
    </summary>
    
      <category term="software" scheme="https://cs-tao.github.io/categories/software/"/>
    
    
      <category term="Github" scheme="https://cs-tao.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://cs-tao.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>C#中await和async</title>
    <link href="https://cs-tao.github.io/2017/08/19/C-%E4%B8%ADawait%E5%92%8Casync/"/>
    <id>https://cs-tao.github.io/2017/08/19/C-中await和async/</id>
    <published>2017-08-18T16:38:21.000Z</published>
    <updated>2017-08-19T08:57:45.358Z</updated>
    
    <content type="html"><![CDATA[<p><strong> C#中await和async使用介绍 </strong> <excerpt in="" index="" |="" 首页摘要=""><br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">
</the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; C#中await和async使用介绍 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="language" scheme="https://cs-tao.github.io/categories/language/"/>
    
    
      <category term="C#" scheme="https://cs-tao.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Wpf使用MahApp.Metro主题</title>
    <link href="https://cs-tao.github.io/2017/08/19/Wpf%E4%BD%BF%E7%94%A8MahApp-Metro%E4%B8%BB%E9%A2%98/"/>
    <id>https://cs-tao.github.io/2017/08/19/Wpf使用MahApp-Metro主题/</id>
    <published>2017-08-18T16:21:28.000Z</published>
    <updated>2017-08-19T08:57:45.373Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Wpf使用MahApp.Metro主题的步骤小记 </strong> <excerpt in="" index="" |="" 首页摘要=""><br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文=""></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Wpf使用MahApp.Metro主题的步骤小记 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="language" scheme="https://cs-tao.github.io/categories/language/"/>
    
    
      <category term="C#" scheme="https://cs-tao.github.io/tags/C/"/>
    
      <category term="Wpf" scheme="https://cs-tao.github.io/tags/Wpf/"/>
    
      <category term="Xaml" scheme="https://cs-tao.github.io/tags/Xaml/"/>
    
  </entry>
  
  <entry>
    <title>2017年暑假旅游笔记</title>
    <link href="https://cs-tao.github.io/2017/08/17/%E6%9A%91%E5%81%87%E6%97%85%E6%B8%B8%E7%AC%94%E8%AE%B0/"/>
    <id>https://cs-tao.github.io/2017/08/17/暑假旅游笔记/</id>
    <published>2017-08-16T18:45:12.000Z</published>
    <updated>2017-08-20T09:08:47.882Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 暑假旅行笔记 </strong> <excerpt in="" index="" |="" 首页摘要=""><br><a id="more"></a></excerpt></p>
<p><the rest="" of="" contents="" |="" 余下全文=""></the></p>
<h2 id="起点：彭水"><a href="#起点：彭水" class="headerlink" title="起点：彭水"></a>起点：彭水</h2><p>持续更新…</p>
<h2 id="第一站：涪陵"><a href="#第一站：涪陵" class="headerlink" title="第一站：涪陵"></a>第一站：涪陵</h2><p>持续更新…</p>
<h2 id="第二站：重庆"><a href="#第二站：重庆" class="headerlink" title="第二站：重庆"></a>第二站：重庆</h2><p>持续更新…</p>
<h2 id="第三站：成都"><a href="#第三站：成都" class="headerlink" title="第三站：成都"></a>第三站：成都</h2><p>持续更新…</p>
<h2 id="第四站：重庆"><a href="#第四站：重庆" class="headerlink" title="第四站：重庆"></a>第四站：重庆</h2><p>持续更新…</p>
<h2 id="终点：彭水"><a href="#终点：彭水" class="headerlink" title="终点：彭水"></a>终点：彭水</h2><p>持续更新…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 暑假旅行笔记 &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="https://cs-tao.github.io/categories/Life/"/>
    
    
  </entry>
  
  <entry>
    <title>ISODATA算法学习心得及非监督分类软件得商业化界面实现</title>
    <link href="https://cs-tao.github.io/2017/08/17/ISODATA%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97%E5%8F%8A%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%88%86%E7%B1%BB%E8%BD%AF%E4%BB%B6%E5%BE%97%E5%95%86%E4%B8%9A%E5%8C%96%E7%95%8C%E9%9D%A2%E5%AE%9E%E7%8E%B0/"/>
    <id>https://cs-tao.github.io/2017/08/17/ISODATA算法学习心得及非监督分类软件得商业化界面实现/</id>
    <published>2017-08-16T18:25:00.000Z</published>
    <updated>2017-08-19T08:57:45.358Z</updated>
    
    <content type="html"><![CDATA[<p><strong> ISODATA和Winform </strong> <excerpt in="" index="" |="" 首页摘要=""><br>    <a href="http://www.scholat.com/jianyao" title="Jian Yao" target="_blank" rel="external">姚剑老师</a>模式识别作业，代码已托管至<a href="https://github.com/CS-Tao/ImageFactory" title="ImageFactory" target="_blank" rel="external">Github</a><br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<h3 id="ISODATA算法介绍"><a href="#ISODATA算法介绍" class="headerlink" title="ISODATA算法介绍"></a>ISODATA算法介绍</h3><p>ISODATA(Iterative Selforganizing Data Analysis Techniques Algorithm)算法，即迭代自组织数据分析算法。该算法是在k-均值算法的基础上，增加对聚类结果的“合并”和“分裂”两个操作，并设定算法运行控制参数的一种聚类算法。迭代次数会影响最终结果，迭代参数选择很重要。待续…</p>
<h3 id="商业化界面的实现"><a href="#商业化界面的实现" class="headerlink" title="商业化界面的实现"></a>商业化界面的实现</h3><p>采用Winform实现。待续…</p>
</the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; ISODATA和Winform &lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;    &lt;a href=&quot;http://www.scholat.com/jianyao&quot; title=&quot;Jian Yao&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;姚剑老师&lt;/a&gt;模式识别作业，代码已托管至&lt;a href=&quot;https://github.com/CS-Tao/ImageFactory&quot; title=&quot;ImageFactory&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="software" scheme="https://cs-tao.github.io/categories/software/"/>
    
    
      <category term="C#" scheme="https://cs-tao.github.io/tags/C/"/>
    
      <category term="WinForm" scheme="https://cs-tao.github.io/tags/WinForm/"/>
    
      <category term="ISODATA" scheme="https://cs-tao.github.io/tags/ISODATA/"/>
    
  </entry>
  
</feed>
